# Generated by Django 2.0.2 on 2018-03-26 19:26

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=280)),
                ('time_stamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('seen', models.BooleanField(default=False)),
                ('dismissed', models.BooleanField(default=False)),
                ('link', models.URLField(blank=True, max_length=100)),
                ('time_stamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['time_stamp'],
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter Trip Name', max_length=20)),
                ('description', models.TextField(help_text='Enter description and informatin for trip')),
                ('num_seats', models.PositiveSmallIntegerField(help_text='Enter number of seats available for the trip', verbose_name='Number of Seats')),
                ('thumbnail', models.ImageField(help_text='Upload an image to show alongside this trip', upload_to='')),
                ('start_time', models.DateTimeField(help_text='Select Start Time of the Trip')),
                ('end_time', models.DateTimeField(help_text='Select End Time of the Trip')),
                ('cancelled', models.BooleanField(default=False, help_text='Click to Cancel')),
                ('tag', models.CharField(blank=True, choices=[('r', 'Rock Climbing'), ('h', 'Hiking'), ('s', 'Ski and Board'), ('sk', 'Skiing'), ('sn', 'Snowboarding'), ('c', 'Cabin Trip')], help_text='Select a tag to help classify this trip', max_length=2)),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text='Enter your first name', max_length=20, verbose_name='First Name')),
                ('last_name', models.CharField(help_text='Enter your last name', max_length=20, verbose_name='Last Name')),
                ('dob', models.DateField(help_text='Enter your birth date in the format "YYYY-MM-DD"', verbose_name='Date of Birth')),
                ('email', models.EmailField(help_text='Enter your email address', max_length=30, unique=True)),
                ('password', models.CharField(max_length=20)),
                ('profile_img', models.ImageField(upload_to='', verbose_name='Profile Image')),
                ('phone_num', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message="Phone number must be 10 digits and entered in the format '##########'.", regex='\\d{10}')], verbose_name='Phone Number')),
                ('contact_name', models.CharField(blank=True, help_text='Enter name of an emergency contact', max_length=40)),
                ('contact_phone', models.CharField(blank=True, help_text='Enter phone number for emergency contact', max_length=10, validators=[django.core.validators.RegexValidator(message="Phone number must be 10 digits and entered in the format '##########'.", regex='\\d{10}')], verbose_name='Contact Phone Number')),
                ('can_comment', models.BooleanField(default=True, help_text='Set whether user can leave comments on trips')),
                ('can_join_trip', models.BooleanField(default=False, help_text='Allow user to sign up for trips?')),
                ('admin_level', models.CharField(choices=[('u', 'User'), ('l', 'Leader'), ('a', 'Admin')], default='u', max_length=1)),
            ],
            options={
                'ordering': ['last_name', 'first_name', 'admin_level'],
            },
        ),
        migrations.AddField(
            model_name='trip',
            name='leader',
            field=models.ForeignKey(help_text='Select a user to be in charge of organizing and leading this trip', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trip_leader', to='umoc.User', verbose_name='Trip Leader/Organizer'),
        ),
        migrations.AddField(
            model_name='trip',
            name='participants',
            field=models.ManyToManyField(help_text='Select users who are signed up to go on the trip', to='umoc.User'),
        ),
        migrations.AddField(
            model_name='notification',
            name='recipient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='umoc.User'),
        ),
        migrations.AddField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='umoc.User'),
        ),
        migrations.AddField(
            model_name='comment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='umoc.Comment'),
        ),
        migrations.AddField(
            model_name='comment',
            name='trip',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='umoc.Trip'),
        ),
    ]
